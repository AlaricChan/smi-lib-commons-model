/**
 * Copyright © 2017 DELL Inc. or its subsidiaries.  All Rights Reserved.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.15 at 02:06:10 PM CDT 
//

package com.dell.isg.smi.commons.model.storage;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * A factory for creating Object objects.
 */
@XmlRegistry
public class ObjectFactory {

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.dell.esg.icee.common.pojo.model.storage
     * 
     */
    public ObjectFactory() {
    }


    /**
     * Create an instance of {@link StorageFirmware }.
     *
     * @return the storage firmware
     */
    public StorageFirmware createStorageFirmware() {
        return new StorageFirmware();
    }


    /**
     * Create an instance of {@link StoragePerformance }.
     *
     * @return the storage performance
     */
    public StoragePerformance createStoragePerformance() {
        return new StoragePerformance();
    }


    /**
     * Create an instance of {@link DateIntValuePair }.
     *
     * @return the date int value pair
     */
    public DateIntValuePair createDateIntValuePair() {
        return new DateIntValuePair();
    }


    /**
     * Create an instance of {@link DateLongValuePair }.
     *
     * @return the date long value pair
     */
    public DateLongValuePair createDateLongValuePair() {
        return new DateLongValuePair();
    }


    /**
     * Create an instance of {@link StorageTopology }.
     *
     * @return the storage topology
     */
    public StorageTopology createStorageTopology() {
        return new StorageTopology();
    }


    /**
     * Create an instance of {@link ArrayToExpansionConnectionUtilization }.
     *
     * @return the array to expansion connection utilization
     */
    public ArrayToExpansionConnectionUtilization createArrayToExpansionConnectionUtilization() {
        return new ArrayToExpansionConnectionUtilization();
    }


    /**
     * Create an instance of {@link ExpansionToExpansionConnectionUtilization }.
     *
     * @return the expansion to expansion connection utilization
     */
    public ExpansionToExpansionConnectionUtilization createExpansionToExpansionConnectionUtilization() {
        return new ExpansionToExpansionConnectionUtilization();
    }


    /**
     * Create an instance of {@link StorageConsumption }.
     *
     * @return the storage consumption
     */
    public StorageConsumption createStorageConsumption() {
        return new StorageConsumption();
    }


    /**
     * Create an instance of {@link SpaceBreakdown }.
     *
     * @return the space breakdown
     */
    public SpaceBreakdown createSpaceBreakdown() {
        return new SpaceBreakdown();
    }


    /**
     * Create an instance of {@link FastestGrowningVolume }.
     *
     * @return the fastest growning volume
     */
    public FastestGrowningVolume createFastestGrowningVolume() {
        return new FastestGrowningVolume();
    }


    /**
     * Create an instance of {@link StorageAlert }.
     *
     * @return the storage alert
     */
    public StorageAlert createStorageAlert() {
        return new StorageAlert();
    }


    /**
     * Create an instance of {@link StorageDetail }.
     *
     * @return the storage detail
     */
    public StorageDetail createStorageDetail() {
        return new StorageDetail();
    }


    /**
     * Create an instance of {@link StorageSummary }.
     *
     * @return the storage summary
     */
    public StorageSummary createStorageSummary() {
        return new StorageSummary();
    }


    /**
     * Create an instance of {@link Detail }.
     *
     * @return the detail
     */
    public Detail createDetail() {
        return new Detail();
    }


    /**
     * Create an instance of {@link Controllers }.
     *
     * @return the controllers
     */
    public Controllers createControllers() {
        return new Controllers();
    }


    /**
     * Create an instance of {@link HealthBase }.
     *
     * @return the health base
     */
    public HealthBase createHealthBase() {
        return new HealthBase();
    }


    /**
     * Create an instance of {@link StorageUsageOverview }.
     *
     * @return the storage usage overview
     */
    public StorageUsageOverview createStorageUsageOverview() {
        return new StorageUsageOverview();
    }


    /**
     * Create an instance of {@link Enclosure }.
     *
     * @return the enclosure
     */
    public Enclosure createEnclosure() {
        return new Enclosure();
    }


    /**
     * Create an instance of {@link VolumeStorageUsage }.
     *
     * @return the volume storage usage
     */
    public VolumeStorageUsage createVolumeStorageUsage() {
        return new VolumeStorageUsage();
    }


    /**
     * Create an instance of {@link VolumeSummary }.
     *
     * @return the volume summary
     */
    public VolumeSummary createVolumeSummary() {
        return new VolumeSummary();
    }


    /**
     * Create an instance of {@link Disk }.
     *
     * @return the disk
     */
    public Disk createDisk() {
        return new Disk();
    }


    /**
     * Create an instance of {@link DisksOverview }.
     *
     * @return the disks overview
     */
    public DisksOverview createDisksOverview() {
        return new DisksOverview();
    }


    /**
     * Create an instance of {@link ControllerHealth }.
     *
     * @return the controller health
     */
    public ControllerHealth createControllerHealth() {
        return new ControllerHealth();
    }


    /**
     * Create an instance of {@link IscsiDetail }.
     *
     * @return the iscsi detail
     */
    public IscsiDetail createIscsiDetail() {
        return new IscsiDetail();
    }


    /**
     * Create an instance of {@link Snapshot }.
     *
     * @return the snapshot
     */
    public Snapshot createSnapshot() {
        return new Snapshot();
    }


    /**
     * Create an instance of {@link StorageLog }.
     *
     * @return the storage log
     */
    public StorageLog createStorageLog() {
        return new StorageLog();
    }


    /**
     * Create an instance of {@link Volume }.
     *
     * @return the volume
     */
    public Volume createVolume() {
        return new Volume();
    }


    /**
     * Create an instance of {@link NetworkStorageProfile }.
     *
     * @return the network storage profile
     */
    public NetworkStorageProfile createNetworkStorageProfile() {
        return new NetworkStorageProfile();
    }


    /**
     * Create an instance of {@link CreateSnapshot }.
     *
     * @return the creates the snapshot
     */
    public CreateSnapshot createCreateSnapshot() {
        return new CreateSnapshot();
    }


    /**
     * Create an instance of {@link StorageOverview }.
     *
     * @return the storage overview
     */
    public StorageOverview createStorageOverview() {
        return new StorageOverview();
    }


    /**
     * Create an instance of {@link Temperature }.
     *
     * @return the temperature
     */
    public Temperature createTemperature() {
        return new Temperature();
    }


    /**
     * Create an instance of {@link StorageHardwareInventory }.
     *
     * @return the storage hardware inventory
     */
    public StorageHardwareInventory createStorageHardwareInventory() {
        return new StorageHardwareInventory();
    }


    /**
     * Create an instance of {@link DeviceInformationOverview }.
     *
     * @return the device information overview
     */
    public DeviceInformationOverview createDeviceInformationOverview() {
        return new DeviceInformationOverview();
    }


    /**
     * Create an instance of {@link SasDetail }.
     *
     * @return the sas detail
     */
    public SasDetail createSasDetail() {
        return new SasDetail();
    }


    /**
     * Create an instance of {@link VolumeGrowth }.
     *
     * @return the volume growth
     */
    public VolumeGrowth createVolumeGrowth() {
        return new VolumeGrowth();
    }


    /**
     * Create an instance of {@link UpdateSnapshot }.
     *
     * @return the update snapshot
     */
    public UpdateSnapshot createUpdateSnapshot() {
        return new UpdateSnapshot();
    }


    /**
     * Create an instance of {@link IOPort }.
     *
     * @return the IO port
     */
    public IOPort createIOPort() {
        return new IOPort();
    }


    /**
     * Create an instance of {@link NetworkStorageProfileController }.
     *
     * @return the network storage profile controller
     */
    public NetworkStorageProfileController createNetworkStorageProfileController() {
        return new NetworkStorageProfileController();
    }


    /**
     * Create an instance of {@link StorageHealth }.
     *
     * @return the storage health
     */
    public StorageHealth createStorageHealth() {
        return new StorageHealth();
    }


    /**
     * Create an instance of {@link SnapshotSchedule }.
     *
     * @return the snapshot schedule
     */
    public SnapshotSchedule createSnapshotSchedule() {
        return new SnapshotSchedule();
    }


    /**
     * Create an instance of {@link StorageActivity }.
     *
     * @return the storage activity
     */
    public StorageActivity createStorageActivity() {
        return new StorageActivity();
    }


    /**
     * Create an instance of {@link DetailBase }.
     *
     * @return the detail base
     */
    public DetailBase createDetailBase() {
        return new DetailBase();
    }


    /**
     * Create an instance of {@link IoModule }.
     *
     * @return the io module
     */
    public IoModule createIoModule() {
        return new IoModule();
    }


    /**
     * Create an instance of {@link CoolingFan }.
     *
     * @return the cooling fan
     */
    public CoolingFan createCoolingFan() {
        return new CoolingFan();
    }


    /**
     * Create an instance of {@link VolumeGrowthOverview }.
     *
     * @return the volume growth overview
     */
    public VolumeGrowthOverview createVolumeGrowthOverview() {
        return new VolumeGrowthOverview();
    }


    /**
     * Create an instance of {@link Controller }.
     *
     * @return the controller
     */
    public Controller createController() {
        return new Controller();
    }


    /**
     * Create an instance of {@link ControllersHealth }.
     *
     * @return the controllers health
     */
    public ControllersHealth createControllersHealth() {
        return new ControllersHealth();
    }


    /**
     * Create an instance of {@link VolumesOverview }.
     *
     * @return the volumes overview
     */
    public VolumesOverview createVolumesOverview() {
        return new VolumesOverview();
    }


    /**
     * Create an instance of {@link PowerSupply }.
     *
     * @return the power supply
     */
    public PowerSupply createPowerSupply() {
        return new PowerSupply();
    }


    /**
     * Create an instance of {@link HealthNode }.
     *
     * @return the health node
     */
    public HealthNode createHealthNode() {
        return new HealthNode();
    }


    /**
     * Create an instance of {@link EnclosuresOverview }.
     *
     * @return the enclosures overview
     */
    public EnclosuresOverview createEnclosuresOverview() {
        return new EnclosuresOverview();
    }


    /**
     * Create an instance of {@link CacheCard }.
     *
     * @return the cache card
     */
    public CacheCard createCacheCard() {
        return new CacheCard();
    }


    /**
     * Create an instance of {@link IpAddress }.
     *
     * @return the ip address
     */
    public IpAddress createIpAddress() {
        return new IpAddress();
    }


    /**
     * Create an instance of {@link EnclosureHealth }.
     *
     * @return the enclosure health
     */
    public EnclosureHealth createEnclosureHealth() {
        return new EnclosureHealth();
    }

}
