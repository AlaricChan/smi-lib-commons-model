/**
 * Copyright © 2017 DELL Inc. or its subsidiaries.  All Rights Reserved.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.17 at 12:15:24 AM CDT 
//

package com.dell.isg.smi.commons.model.commons.chassis.inventory;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for IceeState.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * <p>
 * 
 * <pre>
 * &lt;simpleType name="IceeState">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Pending Discovery"/>
 *     &lt;enumeration value="Pending Inventory"/>
 *     &lt;enumeration value="OnBoarding"/>
 *     &lt;enumeration value="Discovered"/>
 *     &lt;enumeration value="Available"/>
 *     &lt;enumeration value="Unknown"/>
 *     &lt;enumeration value="Ejected"/>
 *     &lt;enumeration value="Non Compliant"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IceeState")
@XmlEnum
public enum IceeState {

    @XmlEnumValue("Pending Discovery")
    PENDING_DISCOVERY("Pending Discovery"), @XmlEnumValue("Pending Inventory")
    PENDING_INVENTORY("Pending Inventory"), @XmlEnumValue("OnBoarding")
    ON_BOARDING("OnBoarding"), @XmlEnumValue("Discovered")
    DISCOVERED("Discovered"), @XmlEnumValue("Available")
    AVAILABLE("Available"), @XmlEnumValue("Unknown")
    UNKNOWN("Unknown"), @XmlEnumValue("Ejected")
    EJECTED("Ejected"), @XmlEnumValue("Non Compliant")
    NON_COMPLIANT("Non Compliant");
    private final String value;


    IceeState(String v) {
        value = v;
    }


    public String value() {
        return value;
    }


    public static IceeState fromValue(String v) {
        for (IceeState c : IceeState.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
